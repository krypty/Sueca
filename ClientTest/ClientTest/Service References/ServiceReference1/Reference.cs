//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.18408
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClientTest.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Room", Namespace="http://schemas.datacontract.org/2004/07/SuecaContracts")]
    [System.SerializableAttribute()]
    public partial class Room : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClientTest.ServiceReference1.Room.StateRoom RoomStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClientTest.ServiceReference1.Player[] listPlayersField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClientTest.ServiceReference1.Room.StateRoom RoomState {
            get {
                return this.RoomStateField;
            }
            set {
                if ((this.RoomStateField.Equals(value) != true)) {
                    this.RoomStateField = value;
                    this.RaisePropertyChanged("RoomState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClientTest.ServiceReference1.Player[] listPlayers {
            get {
                return this.listPlayersField;
            }
            set {
                if ((object.ReferenceEquals(this.listPlayersField, value) != true)) {
                    this.listPlayersField = value;
                    this.RaisePropertyChanged("listPlayers");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="Room.StateRoom", Namespace="http://schemas.datacontract.org/2004/07/SuecaContracts")]
        public enum StateRoom : int {
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            WAITING_READY = 0,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            GAME_IN_PROGRESS = 1,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            END_GAME = 2,
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Player", Namespace="http://schemas.datacontract.org/2004/07/SuecaContracts")]
    [System.SerializableAttribute()]
    public partial class Player : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int holdingCardsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool isReadyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int takenCardsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string tokenField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int holdingCards {
            get {
                return this.holdingCardsField;
            }
            set {
                if ((this.holdingCardsField.Equals(value) != true)) {
                    this.holdingCardsField = value;
                    this.RaisePropertyChanged("holdingCards");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isReady {
            get {
                return this.isReadyField;
            }
            set {
                if ((this.isReadyField.Equals(value) != true)) {
                    this.isReadyField = value;
                    this.RaisePropertyChanged("isReady");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int takenCards {
            get {
                return this.takenCardsField;
            }
            set {
                if ((this.takenCardsField.Equals(value) != true)) {
                    this.takenCardsField = value;
                    this.RaisePropertyChanged("takenCards");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string token {
            get {
                return this.tokenField;
            }
            set {
                if ((object.ReferenceEquals(this.tokenField, value) != true)) {
                    this.tokenField = value;
                    this.RaisePropertyChanged("token");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GameInfo", Namespace="http://schemas.datacontract.org/2004/07/SuecaContracts")]
    [System.SerializableAttribute()]
    public partial class GameInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ClientTest.ServiceReference1.Card[] ListCardsPlayedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberCardsWinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberPlayerToPlayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlayerTokenField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ClientTest.ServiceReference1.Card[] ListCardsPlayed {
            get {
                return this.ListCardsPlayedField;
            }
            set {
                if ((object.ReferenceEquals(this.ListCardsPlayedField, value) != true)) {
                    this.ListCardsPlayedField = value;
                    this.RaisePropertyChanged("ListCardsPlayed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberCardsWin {
            get {
                return this.NumberCardsWinField;
            }
            set {
                if ((this.NumberCardsWinField.Equals(value) != true)) {
                    this.NumberCardsWinField = value;
                    this.RaisePropertyChanged("NumberCardsWin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberPlayerToPlay {
            get {
                return this.NumberPlayerToPlayField;
            }
            set {
                if ((this.NumberPlayerToPlayField.Equals(value) != true)) {
                    this.NumberPlayerToPlayField = value;
                    this.RaisePropertyChanged("NumberPlayerToPlay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlayerToken {
            get {
                return this.PlayerTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.PlayerTokenField, value) != true)) {
                    this.PlayerTokenField = value;
                    this.RaisePropertyChanged("PlayerToken");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Card", Namespace="http://schemas.datacontract.org/2004/07/SuecaContracts")]
    [System.SerializableAttribute()]
    public partial class Card : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.Sueca", CallbackContract=typeof(ClientTest.ServiceReference1.SuecaCallback), SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface Sueca {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Sueca/CreateRoom", ReplyAction="http://tempuri.org/Sueca/CreateRoomResponse")]
        string CreateRoom(string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Sueca/CreateRoom", ReplyAction="http://tempuri.org/Sueca/CreateRoomResponse")]
        System.Threading.Tasks.Task<string> CreateRoomAsync(string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Sueca/JoinRoom", ReplyAction="http://tempuri.org/Sueca/JoinRoomResponse")]
        string JoinRoom(string roomName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Sueca/JoinRoom", ReplyAction="http://tempuri.org/Sueca/JoinRoomResponse")]
        System.Threading.Tasks.Task<string> JoinRoomAsync(string roomName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Sueca/SendReady", ReplyAction="http://tempuri.org/Sueca/SendReadyResponse")]
        void SendReady(string playerToken, bool isReady);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Sueca/SendReady", ReplyAction="http://tempuri.org/Sueca/SendReadyResponse")]
        System.Threading.Tasks.Task SendReadyAsync(string playerToken, bool isReady);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Sueca/ListRoom", ReplyAction="http://tempuri.org/Sueca/ListRoomResponse")]
        ClientTest.ServiceReference1.Room[] ListRoom();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Sueca/ListRoom", ReplyAction="http://tempuri.org/Sueca/ListRoomResponse")]
        System.Threading.Tasks.Task<ClientTest.ServiceReference1.Room[]> ListRoomAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface SuecaCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/Sueca/GameStarted")]
        void GameStarted(string message);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/Sueca/RoomUpdated")]
        void RoomUpdated(ClientTest.ServiceReference1.Room room);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/Sueca/GameInfoUpdated")]
        void GameInfoUpdated(ClientTest.ServiceReference1.GameInfo gameInfo);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface SuecaChannel : ClientTest.ServiceReference1.Sueca, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SuecaClient : System.ServiceModel.DuplexClientBase<ClientTest.ServiceReference1.Sueca>, ClientTest.ServiceReference1.Sueca {
        
        public SuecaClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public SuecaClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public SuecaClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public SuecaClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public SuecaClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public string CreateRoom(string password) {
            return base.Channel.CreateRoom(password);
        }
        
        public System.Threading.Tasks.Task<string> CreateRoomAsync(string password) {
            return base.Channel.CreateRoomAsync(password);
        }
        
        public string JoinRoom(string roomName, string password) {
            return base.Channel.JoinRoom(roomName, password);
        }
        
        public System.Threading.Tasks.Task<string> JoinRoomAsync(string roomName, string password) {
            return base.Channel.JoinRoomAsync(roomName, password);
        }
        
        public void SendReady(string playerToken, bool isReady) {
            base.Channel.SendReady(playerToken, isReady);
        }
        
        public System.Threading.Tasks.Task SendReadyAsync(string playerToken, bool isReady) {
            return base.Channel.SendReadyAsync(playerToken, isReady);
        }
        
        public ClientTest.ServiceReference1.Room[] ListRoom() {
            return base.Channel.ListRoom();
        }
        
        public System.Threading.Tasks.Task<ClientTest.ServiceReference1.Room[]> ListRoomAsync() {
            return base.Channel.ListRoomAsync();
        }
    }
}
